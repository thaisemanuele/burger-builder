{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","config.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/utilities.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","onClick","closeDrawer","isAuthenticated","drawerToggle","DrawerToggle","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","FIREBASE_SIGNUP_URL","FIREBASE_SIGNIN_URL","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","ingKey","Array","_","index","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","errorConfirmeHandler","error","reqInterceptor","interceptors","response","use","req","resInterceptor","res","request","eject","message","authSuccess","userId","idToken","authFailed","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","isPurchaseable","sum","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","validationMessage","invalid","shouldValidate","touched","Invalid","ValidationMessage","errorMessage","elementType","elementConfig","value","onChange","changed","options","option","displayValue","InputContainer","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","ContactData","orderForm","name","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","orderData","onOrderBurger","inputChangedHandler","inputId","updatedOrderForm","updatedFormElement","target","inputIdentifier","formElementsArray","id","config","form","onSubmit","formElement","Input","loading","post","purchaseBurgerSuccess","purchaseBurgerFailed","withRouter","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchaseRedirect","purchased","match","component","amount","ingredientOutput","ing","textTranform","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","queryParams","fetchedOrders","fetchOrdersFailed","Auth","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","err","Logout","onLogout","App","onTryAutoSignUp","routes","getItem","timeout","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","removeIngredient","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","orderId","fetchOrdersStart","fetchOrdersSuccess","authStart","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6201f3ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"InputContainer\":\"Input_InputContainer__1ZbKb\",\"ValidationMessage\":\"Input_ValidationMessage__3C6jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css'\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"MyBurger\"></img>\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems} onClick={props.closeDrawer}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        {   props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null   }  \n        { \n            !props.isAuthenticated \n                ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem> \n                : <NavigationItem link=\"/logout\">Logout</NavigationItem>\n        }\n        \n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null \n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux'\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return(\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} closeDrawer={props.closed}/>\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../Aux/Aux'\nimport classes from './Layout.module.css'\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {\n                showSideDrawer: !prevState.showSideDrawer};  \n        });\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar\n                    isAuth={this.props.isAuthenticated} \n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated} \n                    open={this.state.showSideDrawer} \n                    closed={this.sideDrawerClosedHandler}/>\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","export const FIREBASE_URL = 'https://vuejs-stocktrader-3ba86.firebaseio.com/';\nexport const FIREBASE_SIGNUP_URL = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDGrehEXGxd4oqiIaL57izG9fuQ8fWpS1k';\nexport const FIREBASE_SIGNIN_URL = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDGrehEXGxd4oqiIaL57izG9fuQ8fWpS1k';","import axios from'axios';\nimport * as config from './config';\n\nconst instance = axios.create({\n    baseURL: config.FIREBASE_URL,\n});\n\nexport default instance;","import React, { Component } from 'react';\nimport classes from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                    );\n                    break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>\n                break;\n            default:\n                ingredient = null;   \n        }\n        return ingredient;\n    }\n} \n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    \n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(ingKey => {\n            return [...Array(props.ingredients[ingKey])]    //Array of size ingredients.lenght\n                .map((_, index)=>{\n                    return <BurgerIngredient key={ingKey + index} type={ingKey} />\n                });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n    \n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\n\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label:'Salad', type:'salad'},\n    {label:'Bacon', type:'bacon'},\n    {label:'Cheese', type:'cheese'},\n    {label:'Meat', type:'meat'}\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map( ctrl =>(\n            <BuildControl \n                key = {ctrl.label} \n                label = {ctrl.label}\n                added = { () => props.ingredientAdded(ctrl.type)}\n                removed = { () => props.ingredientRemoved(ctrl.type)}\n                disabled = {props.disabled[ctrl.type]}\n            />\n            )\n        )}\n        <button \n            className={classes.OrderButton} \n            disabled={!props.purchasable}\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.module.css'\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop'\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div \n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        );\n    };\n}\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => {\n    return (\n    \n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}\n        disabled={props.disabled}>{props.children}</button>\n)};\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    \n    render () {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(ingKey => {\n            return (\n                <li key={ingKey}> \n                    <span \n                        style={{textTransform: 'capitalize'}}> {ingKey} \n                    </span>\n                    : {this.props.ingredients[ingKey]}\n                </li>\n            )\n        });\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        );\n    }\n};\n\nexport default OrderSummary;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;","import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                error: null\n            }\n            this.reqInterceptor = axios.interceptors.response.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmeHandler = () => {\n            this.setState({error: null});\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmeHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n\n    } \n}\n\nexport default withErrorHandler;","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nimport * as config from '../../config';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFailed = (error) => {\n    return {\n        type: actionTypes.AUTH_FAILED,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup=true) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        const url = isSignup ? config.FIREBASE_SIGNUP_URL : config.FIREBASE_SIGNIN_URL;\n        axios.post(url, authData)\n        .then ( response => {\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n            localStorage.setItem('token', response.data.idToken);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId', response.data.localId);\n            dispatch(authSuccess(response.data.idToken, response.data.localId));   \n            dispatch(checkAuthTimeout(response.data.expiresIn));         \n        })\n        .catch ( err => {\n            dispatch(authFailed(err.response.data.error));\n        });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token) {\n            dispatch(logout());\n        }\n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(new Date() > expirationDate){\n                dispatch(logout());\n            }\n            else {\n                const userId = localStorage.getItem('userId');\n                const timeout = (expirationDate.getTime() - new Date().getTime()) / 1000;\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout(timeout));\n            }\n        }\n    };\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAILED = 'FETCH_ORDERS_FAILED';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILED = 'AUTH_FAILED';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from '../../axios-orders';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nimport * as actions from '../../store/actions/index';\n\nexport class BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    isPurchaseable = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(ingKey => {\n                return ingredients[ingKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            },0);\n\n        return sum > 0;\n    }\n    \n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({purchasing: true});\n        } else {\n            this.props.onSetAuthRedirectPath(\"/checkout\");\n            this.props.history.push(\"/auth\");\n        }\n    }\n\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n    \n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');   \n    }\n\n    render() {\n        const disabledInfo ={\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        \n        let burger = this.props.error ? <p>Ingredients could not be loaded!</p> : <Spinner />\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={ this.props.ings } />\n                    <BuildControls \n                        ingredientAdded={this.props.onIngredientAdded} \n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.isPurchaseable(this.props.ings)}\n                        ordered={this.purchaseHandler} \n                        isAuth={this.props.isAuthenticated}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary \n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        \n        return (\n            <Aux>\n                <Modal \n                    show={this.state.purchasing}\n                    modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token != null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    }\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('ingredients.json')\n        .then(response => {\n            dispatch(setIngredients(response.data));\n        }).catch(error => {\n            dispatch(fetchIngredientsFailed())\n        });\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        id: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFailed = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAILED,\n        error: error\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFailed(error));\n            }); \n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFailed = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAILED,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"'+userId+'\"';\n        axios.get('orders.json' + queryParams)\n                .then(res => {\n                    const fetchedOrders = [];\n                    for (let key in res.data) {\n                        fetchedOrders.push({\n                            ...res.data[key],\n                            id: key\n                        });\n                    }\n                    dispatch(fetchOrdersSuccess(fetchedOrders));\n                })\n                .catch(error => {\n                    dispatch(fetchOrdersFailed(error));\n                });    \n    };\n};","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css'\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.module.css'\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    let validationMessage = null;\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n        validationMessage = <p className={classes.ValidationMessage}>{props.errorMessage}</p>\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}\n                />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                className={inputClasses.join(' ')}\n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}\n                />;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}\n                    >\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\n\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input \n                className={inputClasses.join(' ')}\n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}\n                />;\n    }\n    return (\n        <div>\n            <label className={classes.Label} >{props.label}</label>\n            <div className={classes.InputContainer}>\n            {inputElement}\n            {validationMessage}\n            </div>\n        </div>\n    );\n};\n\nexport default input;","\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n};","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport Input from '../../../components/UI/Input/Input';\nimport * as actions from '../../../store/actions/index';\nimport { checkValidity } from '../../../shared/utilities';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name:{\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                errorMessage: \"This field is required\",\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                errorMessage: \"This field is required\",\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                errorMessage: \"Enter a valid ZIP Code\",\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                errorMessage: \"This field is required\",\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                errorMessage: \"Enter a valid e-mail\",\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for (let formElementId in this.state.orderForm) {\n            formData[formElementId] = this.state.orderForm[formElementId].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        };\n        this.props.onOrderBurger(order, this.props.token);\n    }\n\n    inputChangedHandler = (event, inputId) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = {\n            ...updatedOrderForm[inputId]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputId] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        errorMessage = {formElement.config.errorMessage}\n                        touched = {formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withErrorHandler(ContactData, axios)));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />;\n        if (this.props.ings) {\n            const purchaseRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n            summary = (\n                <div>\n                    {purchaseRedirect}\n                    <CheckoutSummary \n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler}\n                        />\n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData} />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    };\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport classes from './Order.module.css'\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            { \n                name: ingredientName, \n                amount: props.ingredients[ingredientName] \n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ing => {\n        return <span \n            style={{\n                textTranform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={ing.name}>{ing.name} ({ing.amount})</span>;\n    })\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: { ingredientOutput }</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    );\n}\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from '../../axios-orders'\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let orders = <Spinner />;\n        if(!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order \n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ));\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\nimport { checkValidity } from '../../shared/utilities';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email:{\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'E-mail address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                errorMessage: \"Please enter a valid e-mail address\",\n                touched: false\n            },\n            password:{\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                errorMessage: \"At least 6 characters\",\n                touched: false\n            },\n        },\n        isSignup: true\n    };\n\n    componentDidMount() {\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\n            this.props.onSetAuthRedirectPath()\n        }\n    };\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({ controls: updatedControls});\n    };\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\n    };\n\n    switchAuthModeHandler = () => {\n        this.setState( prevState => {\n            return { isSignup: !prevState.isSignup}\n        });\n    };\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n        let form = formElementsArray.map(formElement => (\n            \n            <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType} \n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                errorMessage = {formElement.config.errorMessage}\n                touched = {formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\n            )\n        );\n        if (this.props.loading) {\n            form = <Spinner />;\n        }\n\n        const errorMessage = this.props.error ? <p>{this.props.error.message}</p> : null;\n\n        const authRedirect = this.props.isAuthenticated ? <Redirect to={this.props.authRedirectPath} /> : null;\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                <h3>{this.state.isSignup ? \"SIGN UP\" : \"SIGN IN\"}</h3>\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                {errorMessage}\n                <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler} >SWITCH TO {this.state.isSignup ? \"SIGN IN\" : \"SIGN UP\"}</Button>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token != null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        this.props.onLogout();\n    }\n\n    render() {\n        return <Redirect to=\"/\" />;\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    \n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" /> \n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.3,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n    return {\n        ...state,\n        ingredients: {\n            ...state.ingredients,\n            [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    };\n};\n\nconst removeIngredient = (state, action) => {\n    return {\n        ...state,\n        ingredients: {\n            ...state.ingredients,\n            [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    };\n};\n\nconst setIngredients = (state, action) => {\n    return {\n        ...state,\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    };\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return {\n        ...state,\n        error: true\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case actionTypes.ADD_INGREDIENT:            return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT:         return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS:           return setIngredients(state, action);\n        case actionTypes.FETCH_INGREDIENTS_FAILED:  return fetchIngredientsFailed(state, action);\n        \n        default: return state;\n    }\n\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n    return {\n        ...state,\n        purchased: false\n    };\n};\n\nconst purchaseBurgerStart = (state, action) => {\n    return {\n        ...state,\n        loading: true\n    };\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = {\n        ...action.orderData,\n        id: action.orderId,\n    };\n    return {\n        ...state,\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n    };\n};\n\nconst purchaseBurgerFailed = (state, action) => {\n    return {\n        ...state,\n        loading: false\n    };\n};\n\nconst fetchOrdersStart = (state, action) => {\n    return {\n        ...state,\n        loading: true\n    };\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n    return {\n        ...state,\n        orders: action.orders,\n        loading: false\n    };\n};\n\nconst fetchOrdersFailed = (state, action) => {\n    return {\n        ...state,\n        loading:false\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:             return purchaseInit(state, action);\n        case actionTypes.PURCHASE_BURGER_START:     return purchaseBurgerStart(state, action);\n        case actionTypes.PURCHASE_BURGER_SUCCESS:   return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAILED:    return purchaseBurgerFailed(state, action);\n        case actionTypes.FETCH_ORDERS_START:        return fetchOrdersStart(state, action);\n        case actionTypes.FETCH_ORDERS_SUCCESS:      return fetchOrdersSuccess(state, action);\n        case actionTypes.FETCH_ORDERS_FAILED:       return fetchOrdersFailed(state, action);\n           \n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: \"/\"\n};\n\nconst authStart = (state, action) => {\n    return {\n        ...state,\n        error: null,\n        loading: true\n    }\n};\n\nconst authSuccess = (state, action) => {\n    return {\n        ...state,\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n    }\n};\n\nconst authFailed = (state, action) => {\n    return {\n        ...state,\n        error: action.error,\n        loading: false\n    }\n};\n\nconst authLogout = (state, action) => {\n    return {\n        ...state,\n        token: null,\n        userId: null\n    };\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return {\n        ...state,\n        authRedirectPath: action.path\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:                return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:              return authSuccess(state, action);\n        case actionTypes.AUTH_FAILED:               return authFailed(state, action);\n        case actionTypes.AUTH_LOGOUT:               return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH:    return setAuthRedirectPath(state, action);\n        \n        default: return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth'\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>    \n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}